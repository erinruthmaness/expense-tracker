{"version":3,"sources":["components/UI/Card.js","components/Expenses/Filter/Filter.js","components/Expenses/Chart/ChartBar/ChartBar.js","components/Expenses/Chart/Chart.js","components/Expenses/Chart/ExpensesChart.js","components/Expenses/ExpensesList/ExpenseItem/ExpenseDate/ExpenseDate.js","components/Expenses/ExpensesList/ExpenseItem/ExpenseItem.js","components/Expenses/ExpensesList/ExpensesList.js","components/Expenses/Expenses.js","components/NewExpense/ShowForm/ShowForm.js","components/NewExpense/ExpenseForm/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","Filter","onChange","event","onFilter","target","value","selected","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","max","ExpensesChart","chartDataPoints","expenses","expense","date","getMonth","amount","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","title","ExpensesList","items","length","id","Expenses","useState","setYear","displayExpenses","filter","parseInt","newYear","ShowForm","onClick","toggleForm","ExpenseForm","newTitle","setNewTitle","newAmount","setNewAmount","newDate","setNewDate","changeHandler","console","log","onSubmit","preventDefault","expenseData","Date","onAddNew","type","min","step","NewExpense","showForm","setShowForm","newData","newExpense","random","toString","onAdd","DUMMY_EXPENSES","App","setExpenses","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.155cf82d.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n  \r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import './Filter.css';\r\n\r\nconst Filter = (props) => {\r\n\r\n    const handleFilter = (event) => {\r\n        props.onFilter(event.target.value);\r\n    }\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select onChange={handleFilter} value={props.selected}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;","import \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n      barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\"\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import ChartBar from \"./ChartBar/ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const max = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          label={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={max}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from './Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); //starts at 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;","import Card from '../../../../UI/Card';\r\nimport './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n  \r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <Card className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;","import ExpenseDate from \"./ExpenseDate/ExpenseDate\";\r\nimport Card from \"../../../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem/ExpenseItem\";\r\n\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No expenses found.</h2>;\r\n  } else {\r\n    return (\r\n      <ul className=\"expenses-list\">\r\n        {props.items.map((expense) => (\r\n          <ExpenseItem\r\n            key={expense.id}\r\n            date={expense.date}\r\n            amount={expense.amount}\r\n            title={expense.title}\r\n          />\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ExpensesList;\r\n","import { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport ExpensesChart from './Chart/ExpensesChart';\r\nimport ExpensesList from \"./ExpensesList/ExpensesList\";\r\nimport \"./Expenses.css\";\r\n\r\nconst Expenses = (props) => {\r\n  const [year, setYear] = useState(\"2021\");\r\n  const displayExpenses = props.expenses.filter(\r\n    (expense) => expense.date.getFullYear() === parseInt(year)\r\n  );\r\n\r\n  const handleFilter = (newYear) => {\r\n    setYear(newYear);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <Filter selected={year} onFilter={handleFilter} />\r\n      <ExpensesChart expenses={displayExpenses} />\r\n      <ExpensesList items={displayExpenses} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import \"./ShowForm.css\";\r\n\r\nconst ShowForm = (props) => {\r\n  return <button onClick={props.toggleForm}>Add New Expense</button>;\r\n};\r\n\r\nexport default ShowForm;\r\n","import { useState } from \"react\";\r\n\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [newTitle, setNewTitle] = useState(\"\");\r\n  const [newAmount, setNewAmount] = useState(\"\");\r\n  const [newDate, setNewDate] = useState(\"\");\r\n\r\n  const changeHandler = (event) => {\r\n    switch (event.target.id) {\r\n      case \"new-expense-title\":\r\n        setNewTitle(event.target.value);\r\n        break;\r\n      case \"new-expense-amount\":\r\n        setNewAmount(event.target.value);\r\n        break;\r\n      case \"new-expense-date\":\r\n        setNewDate(event.target.value);\r\n        break;\r\n      default:\r\n        console.log(\"switch case error:\");\r\n        console.log(event.target.id);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: newTitle,\r\n      amount: +newAmount,\r\n      date: new Date(newDate),\r\n    };\r\n    props.onAddNew(expenseData);\r\n\r\n    setNewTitle(\"\");\r\n    setNewAmount(\"\");\r\n    setNewDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            id=\"new-expense-title\"\r\n            type=\"text\"\r\n            value={newTitle}\r\n            onChange={changeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            id=\"new-expense-amount\"\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={changeHandler}\r\n            value={newAmount}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            id=\"new-expense-date\"\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={changeHandler}\r\n            value={newDate}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.toggleForm}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import { useState } from \"react\";\r\nimport ShowFormButton from \"./ShowForm/ShowForm\";\r\nimport ExpenseForm from \"./ExpenseForm/ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  const displayForm = () => {\r\n    setShowForm(true);\r\n  };\r\n  const hideForm = () => {\r\n    setShowForm(false);\r\n  };\r\n\r\n  const newDataHandler = (newData) => {\r\n    const newExpense = {\r\n      ...newData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAdd(newExpense);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {showForm ? (\r\n        <ExpenseForm onAddNew={newDataHandler} toggleForm={hideForm} />\r\n      ) : (\r\n        <ShowFormButton toggleForm={displayForm} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import { useState } from \"react\";\n\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevState) => {\n      return [expense, ...prevState];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAdd={addExpenseHandler} />\n      <Expenses expenses={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}